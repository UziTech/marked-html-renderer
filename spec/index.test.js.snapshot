exports[`extensions > fallback extension 1`] = `
"<p><em>test</em></p>"
`;

exports[`extensions > fallback renderer 1`] = `
"<p><em>test</em></p>"
`;

exports[`marked.parse > code fence with lang string 1`] = `
"<pre class=\\"language-text\\"><code>a\\n</code></pre>"
`;

exports[`marked.parse > comments 1`] = `
"<!-- comment --><!--\\nmultiline comment\\n-->"
`;

exports[`marked.parse > html 1`] = `
"&lt;div&gt;"
`;

exports[`marked.parse > loose task list 1`] = `
"<ul><li><p><input type=\\"checkbox\\" disabled=\\"\\"> task</p></li><li><input type=\\"checkbox\\" checked=\\"\\" disabled=\\"\\"> <h1>loose</h1></li></ul>"
`;

exports[`marked.parse > ordered list not starting at 1 1`] = `
"<ol start=\\"2\\"><li>list</li></ol>"
`;

exports[`marked.parse > reference.md 1`] = `
"<h1>Markdown Quick Reference</h1><p>This guide is a very brief overview, with examples, of the syntax that <a href=\\"http://daringfireball.net/projects/markdown/\\">Markdown</a> supports. It is itself written in Markdown and you can copy the samples over to the left-hand pane for experimentation. It's shown as <em>text</em> and not <em>rendered HTML</em>.</p><h1>Simple Text Formatting</h1><p>First thing is first. You can use <em>stars</em> or <em>underscores</em> for italics. <strong>Double stars</strong> and <strong>double underscores</strong> for bold. <em><strong>Three together</strong></em> for <em><strong>both</strong></em>.</p><p>Paragraphs are pretty easy too. Just have a blank line between chunks of text.</p><blockquote><p>This chunk of text is in a block quote. Its multiple lines will all be\\nindented a bit from the rest of the text.</p><blockquote><p>Multiple levels of block quotes also work.</p></blockquote></blockquote><p>Sometimes you want to include code, such as when you are explaining how <code>&lt;h1&gt;</code> HTML tags work, or maybe you are a programmer and you are discussing <code>someMethod()</code>.</p><p>If you want to include code and have new\\nlines preserved, indent the line with a tab\\nor at least four spaces:</p><pre><code>Extra spaces work here too.\\nThis is also called preformatted text and it is useful for showing examples.\\nThe text will stay as text, so any *markdown* or &amp;lt;u&amp;gt;HTML&amp;lt;/u&amp;gt; you add will\\nnot show up formatted. This way you can show markdown examples in a\\nmarkdown document.\\n</code></pre><blockquote><pre><code>You can also use preformatted text with your blockquotes\\nas long as you add at least five spaces.\\n</code></pre></blockquote><h1>Headings</h1><p>There are a couple of ways to make headings. Using three or more equals signs on a line under a heading makes it into an \\"h1\\" style. Three or more hyphens under a line makes it \\"h2\\" (slightly smaller). You can also use multiple pound symbols (<code>#</code>) before and after a heading. Pounds after the title are ignored. Here are some examples:</p><h1>This is H1</h1><h2>This is H2</h2><h1>This is H1</h1><h2>This is H2</h2><h3>This is H3 with some extra pounds</h3><h4>You get the idea</h4><h5>I don't need extra pounds at the end</h5><h6>H6 is the max</h6><h1>Links</h1><p>Let's link to a few sites. First, let's use the bare URL, like <a href=\\"https://www.github.com\\">https://www.github.com</a>. Great for text, but ugly for HTML.\\nNext is an inline link to <a href=\\"https://www.google.com\\">Google</a>. A little nicer.\\nThis is a reference-style link to [Wikipedia] <a href=\\"https://www.wikipedia.org\\">1</a>.\\nLastly, here's a pretty link to <a href=\\"https://www.yahoo.com\\">Yahoo</a>. The reference-style and pretty links both automatically use the links defined below, but they could be defined <em>anywhere</em> in the markdown and are removed from the HTML. The names are also case insensitive, so you can use <a href=\\"https://www.yahoo.com\\">YaHoO</a> and have it link properly.</p><p>Title attributes may be added to links by adding text after a link.\\nThis is the <a href=\\"https://www.bing.com\\" title=\\"Bing\\">inline link</a> with a \\"Bing\\" title.\\nYou can also go to [W3C] <a href=\\"https://w3c.org\\" title=\\"The W3C puts out specs for web-based things\\">2</a> and maybe visit a <a href=\\"https://facebook.com\\" title=\\"Facebook!\\">friend</a>.</p><p>Email addresses in plain text are not linked: <a href=\\"mailto:test@example.com\\">test@example.com</a>.\\nEmail addresses wrapped in angle brackets are linked: <a href=\\"mailto:test@example.com\\">test@example.com</a>.\\nThey are also obfuscated so that email harvesting spam robots hopefully won't get them.</p><h1>Lists</h1><ul><li>This is a bulleted list</li><li>Great for shopping lists</li></ul><ul><li>You can also use hyphens</li></ul><ul><li>Or plus symbols</li></ul><p>The above is an \\"unordered\\" list. Now, on for a bit of order.</p><ol><li>Numbered lists are also easy</li><li>Just start with a number</li><li>However, the actual number doesn't matter when converted to HTML.</li><li>This will still show up as 4.</li></ol><p>You might want a few advanced lists:</p><ul><li><p>This top-level list is wrapped in paragraph tags</p></li><li><p>This generates an extra space between each top-level item.</p></li><li><p>You do it by adding a blank line</p></li><li><p>This nested list also has blank lines between the list items.</p></li><li><p>How to create nested lists</p><ol><li>Start your regular list</li><li>Indent nested lists with two spaces</li><li>Further nesting means you should indent with two more spaces</li></ol><ul><li>This line is indented with four spaces.</li></ul></li><li><p>List items can be quite lengthy. You can keep typing and either continue\\nthem on the next line with no indentation.</p></li><li><p>Alternately, if that looks ugly, you can also\\nindent the next line a bit for a prettier look.</p></li><li><p>You can put large blocks of text in your list by just indenting with two spaces.</p><p>This is formatted the same as code, but you can inspect the HTML\\nand find that it's just wrapped in a <code>&lt;p&gt;</code> tag and <em>won't</em> be shown\\nas preformatted text.</p><p>You can keep adding more and more paragraphs to a single\\nlist item by adding the traditional blank line and then keep\\non indenting the paragraphs with two spaces.</p><p>You really only need to indent the first line,</p></li></ul><p>but that looks ugly.</p><ul><li><p>Lists support blockquotes</p><blockquote><p>Just like this example here. By the way, you can\\nnest lists inside blockquotes!</p><ul><li>Fantastic!</li></ul></blockquote></li><li><p>Lists support preformatted text</p><pre><code>You just need to indent an additional four spaces.\\n</code></pre></li></ul><h1>Even More</h1><h2>Horizontal Rule</h2><p>If you need a horizontal rule you just need to put at least three hyphens, asterisks, or underscores on a line by themselves. You can also even put spaces between the characters.</p><hr><hr><hr><p>Those three all produced horizontal lines. Keep in mind that three hyphens under any text turns that text into a heading, so add a blank like if you use hyphens.</p><h2>Images</h2><p>Images work exactly like links, but they have exclamation points in front. They work with references and titles too.</p><p><img src=\\"https://www.google.com/images/errors/logo_sm.gif\\" alt=\\"Google Logo\\"> and <img src=\\"https://wpclipart.com/smiley/happy/simple_colors/smiley_face_simple_green_small.png\\" alt=\\"Happy\\" title=\\"&amp;quot;Smiley face&amp;quot;\\">.</p><h2>Inline HTML</h2><p>If markdown is too limiting, you can just insert your own <strike>crazy</strike> HTML. Span-level HTML <u>can <em>still</em> use markdown</u>. Block level elements must be separated from text by a blank line and must not have any spaces before the opening and closing HTML.</p><div style=\\"font-family: &quot;Comic Sans MS&quot;, &quot;Comic Sans&quot;, cursive;\\">\\nIt is a pity, but markdown does **not** work in here for most markdown parsers.\\n[Marked] handles it pretty well.\\n</div>\\n"
`;

exports[`marked.parse > table 1`] = `
"<table><thead><tr><th align=\\"left\\">a</th><th align=\\"center\\">b</th><th align=\\"right\\">c</th></tr></thead><tbody><tr><td align=\\"left\\">1</td><td align=\\"center\\">2</td><td align=\\"right\\">3</td></tr></tbody></table>"
`;

exports[`marked.parse > table no rows 1`] = `
"<table><thead><tr><th>a</th><th>b</th><th>c</th></tr></thead></table>"
`;

exports[`marked.parse > task list 1`] = `
"<ul><li><input type=\\"checkbox\\" disabled=\\"\\"> task</li></ul>"
`;

exports[`marked.parseInline > br 1`] = `
"line1<br>line2"
`;

exports[`marked.parseInline > codespan 1`] = `
"<code>codespan</code>"
`;

exports[`marked.parseInline > comment 1`] = `
"test <!-- comment -->"
`;

exports[`marked.parseInline > del 1`] = `
"<del>del</del>"
`;

exports[`marked.parseInline > em 1`] = `
"<em>em</em>"
`;

exports[`marked.parseInline > escape 1`] = `
"[escaped"
`;

exports[`marked.parseInline > image 1`] = `
"<img src=\\"./test.png\\" alt=\\"strong em codespan del <!-- comment --> link image\\">"
`;

exports[`marked.parseInline > image with title 1`] = `
"<img src=\\"test.png\\" alt=\\"alt text\\" title=\\"image title\\">"
`;

exports[`marked.parseInline > link with title 1`] = `
"<a href=\\"test.html\\" title=\\"link title\\">link text</a>"
`;

exports[`marked.parseInline > strong 1`] = `
"<strong>strong</strong>"
`;

exports[`marked.parseInline > text renderer br 1`] = `
"<img src=\\"test.png\\" alt=\\"multilineimage\\">"
`;
